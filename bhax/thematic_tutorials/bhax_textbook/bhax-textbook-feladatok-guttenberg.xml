<chapter xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xi="http://www.w3.org/2001/XInclude" version="5.0" xml:lang="hu">
    <info>
        <title>Helló, Guttenberg!</title>
        <keywordset>
            <keyword/>
        </keywordset>
    </info>

    <section>
        <title>Guttenberg olvasónapló</title>
<para>
KERNIGHANRICHIE
</para>

<para>
Azt a kifejezést ami pontosvesszővel le van zárva (utasításlezáró jel) utasításnak nevezünk.
Ezt követően a kacsos zárójelekkel közrefogva tehetjük ide a parancsainkat, deklarációinkat.
A zárójel végét nem követi pontosvessző.
</para>

<para>
If else
</para>

<para>
Akkor használjuk ha valamilyen feltétel bekövetkezésekor akarunk valamit hogy megtörténjen,
az 'else' nem feltétlenül szükséges. Ha csak egy parancsot akarunk ez után elvégezni nem szükséges
kapcsos zárójelet használni, de amint többet akarunk szükséges. A jobb átláthatóságért egy parancsnál
is hasznos lehet. Ezeket egymásba lehet ágyazni és végtelenségig lehet 'if else'-t használni. Viszont
ha egy pár darabnál többet akarunk ajánlatos a következő parancs használatát megfontolni.
</para>

<para>
Switch
</para>

<para>
Ha több irányba el akarjuk ágaztatni a programunkat nagyon hasznos parancs. Itt is megadott feltételeknek
kell teljesülni hogy egy irányba menjen. Ha nem felel meg egy kritériumnak sem, akkor a default úton fog menni
a program, ha raktunk bele default utat. Az egyes elágazások után break-et kell használni.
</para>

<para>
While, For
</para>

<para>
Ciklusoknak nevezik őket, a bennük lévő kifejezés elemzése után megtörténnek a benne lévő parancsok,
akkor ha igaz a kifejezés. Amint ez megtörtént a kifejezést újra elemzi és addig újra és újra elemzi
és végrehajtja a parancsokat ameddig a kifejezés nem lesz hamis.
</para>

<para>
Do-while
</para>

<para>
Egyszer mindig végre fog hajtódni, csak ezután nézi meg a kifejezés igazságértékét, és ha igaz megint végrehajtja.
Addig ezt teszi amig a kifejezés nem lesz hamis
</para>

<para>
Break, Continue
</para>

<para>
A break garantálja azt, hogy ki tudjunk lépni egy ciklusból, mielőtt újra kiértékelésre kerülne. A continue pedig 
a következő iterációs lépést teszi meg.
</para>

<para>
Goto
</para>

<para>
Nem egy gyakran használt parancs, különböző cimkékre lehet vele ugrálni, akár eljárás vagy függvényből is ki lehet
ugrani.
</para>

<para>
BMECPP
</para>

<para>
C++ nyelv használatánál függvényeknél ha nem akarunk paramétert megadni, akkor használni kell a void szót, 
ha üresen hagyjuk C-ben ez is működőképes, viszont C++-ban nem. Valamint visszatérési értéket kötelező megadni
C-vel ellentétben.
</para>

<para>
A main függvényben használhatjuk az argc változót és az argv-t, ezután return 0-val folytathatjuk, de nem muszáj 
hiszen alapértelmezettként 0-át ad vissza ha lefutott a programunk sikeresen.
</para>  
    
<para>  
A bool típus lehet 'true' vagy 'false', rengeteg féleképpen lehet használni, feltétel teljesítése érdekében 
használják a legtöbbet.
</para>

<para>
Több bájtos stringek, beépített típus, nem szükséges include-olni.
</para>

<para>
Változót deklarálás állhat bárhol ahol egyébként utasítás is. Dönthetünk úgy is hogy egyből adunk kezdőértéket, 
vagy később.
</para>

<para>
C++-ban lehetőségünk van alapértelmezett értékeket használni, ha nem adtunk meg paramétert a függvénynek.
Az argumentumlistában hátulról előre haladva adunk meg alapértelmezett értéket. Híváskor ugyanezt a sorrendet követi.
</para>

<para>
Függvényeknél C-ben érték szerinti paramerátadást történik, C++-ban pedig hivatkozás szerint van megoldva. 
Ha módosítani is szeretnénk a paramétert akkor alkalmazzuk ezt a módszert. A kiszemelt paraméterhez hozzáteszünk
egy and jelet, így tudatjuk, hogy a paraméternek a referenciáját akarjuk használni.
</para>

<para>
PICI 
</para>

<para>
Az első fejezetet a 16. oldaltól érdemes kezdeni olvasni, az előző oldalak a FORTRAN-ról és COBOL-ról szól. Ez a fejezet
programozási alapfogalmakról szól, a programozásnak a céljáról. Megemlít különböző nyelveket, imperatív és deklaratív nyelveket.
</para>

<para>
A második fejezet a programozási nyelvek alapeszközeiről, alapfogalmairól szól, mint például karakterkészlet, kulcsszavak,
lexikális egységek. Általános szabályokat is megismerünk a programozásról. Megtalálhatunk benne különböző nyelvekben példákat hogy ezeket
bemutassa. Az adattípusokról lesz szó ezt követően, változókról és nevesített konstansokról.
</para>

<para>
Kifejezésekkel ismerkedhetünk meg a következő, harmadik fejezetben. Operandus, operátor, prefix, inflix, postflix alak. 
Megemlíti a típuskényszerítési művelet is.
</para>

<para>
A negyedik fejezetben utasításokról van szó, deklaratív és végrehajtó utasítások. Értékadó utasítás, ugró utasítás(goto),
elágazó utasítás(if-else,switch), mint példákkal bemutatva.
</para>

<para>
Az ötödik fejezet a programok szerkezetével, felépítésével foglalkozik. Szó kerül a paraméter adásról. A zárójelek a
hatáskört kezdetét és végét jelzik.
</para>

<para>
A hatodik fejezetben az absztrakt adattípusokról tudhatunk meg információkat. Ez egy olyan adattípus ami amely megvalósítja
a bezárást és az információ elrejtést. Az objektumorientáltságra gondolhatunk főleg. Meghatározott és szigorú
műveletekkel juthatunk hozzá az értékekhez.
</para>

<para>
A hetedik és nyolcadik fejezet főleg az Adáról szól.
</para>

<para>
A kilencedik fejezet pedig a kivételkezelésről szól. Ezzel megtehetjük hogy elvesszük az operációs rendszertől
a hibakezelés folyamatát.
</para>

<para>
<link xlink:href="https://github.com/Davaronas/DE-PTI-Prog1/blob/master/Guttenberg">Githubon</link>
</para>
</section>
</chapter>          
